<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="550" height="270" title="Configuration">
  <mx:Script>
    <![CDATA[
      import mx.events.ValidationResultEvent;
      import mx.managers.PopUpManager;
      import com._2h2n_.dashboard.cruiseControl.events.MessageEvent;
      import com._2h2n_.dashboard.cruiseControl.model.ColorEnum;
      import com._2h2n_.dashboard.cruiseControl.model.Preferences;

      [Bindable]
      public var _preferences:Preferences;
      [Bindable("preferencesChanged")]
      public function get preferences():Preferences
      {
        return _preferences;
      }
      public function set preferences(value:Preferences):void
      {
        _preferences = value;
        _userColor = _preferences.cloneUserColor();
        dispatchEvent(new Event("preferencesChanged"));
      }

      [Bindable]
      private var _message:String;

      [Bindable]
      private var _userColor:Object;

      public function set message(value:String):void
      {
        _message = value;
        if (_message) currentState = "warning";
        else currentState ="";
      }

      private function close():void
      {
        this.visible = false;
      }

      private function update():void
      {
        var vResult:ValidationResultEvent = urlValidator.validate();
        if (vResult.type == ValidationResultEvent.VALID)
        {
          preferences.dashboardUrl = urlText.text;
          preferences.refreshInterval = refreshIntervalSlider.value;
          preferences.setUserColor(_userColor);
          dispatchEvent(new MessageEvent(MessageEvent.REFRESH));
          close();
        }
      }

    ]]>
  </mx:Script>
  <mx:states>
    <mx:State name="warning">
      <mx:AddChild relativeTo="{form}" position="last">
        <mx:FormItem label="Message" width="100%">
          <mx:Label width="100%" text="{_message}" color="#FF0000"/>
        </mx:FormItem>
      </mx:AddChild>
    </mx:State>
  </mx:states>
  <mx:RegExpValidator id="urlValidator" expression="[http|file]://([a-z0-9_\-.]+)+(:[0-9]+)?/(.*)" flags="ig"
                      source="{urlText}" property="text" listener="{urlText}"/>
  <mx:Form id="form" width="100%">
    <mx:FormHeading label="Preferences"/>
    <mx:FormItem label="Cruise control URL:" width="100%">
      <mx:TextInput id="urlText" width="100%" text="{preferences.dashboardUrl}"/>
    </mx:FormItem>
    <mx:FormItem label="Refresh (min):" width="100%">
      <mx:HSlider id="refreshIntervalSlider" width="100%"
                  allowTrackClick="true" minimum="30" maximum="300" liveDragging="true" snapInterval="30" tickInterval="30"
                  value="{preferences.refreshInterval}"
                  labels="['0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4', '4.5', '5']"/>
    </mx:FormItem>
  </mx:Form>
  <mx:Canvas width="100%" height="100%">
    <mx:HBox width="100%" verticalAlign="middle" horizontalAlign="right" top="0" right="0">
      <mx:Text text="Checking:"/><mx:ColorPicker id="checkingColor" selectedColor="{_userColor.checking.code}"
                                                change="{_userColor.checking = new ColorEnum(checkingColor.value as Number)}"/>
      <mx:Text text="Building:"/><mx:ColorPicker id="buildingColor" selectedColor="{_userColor.building.code}"
                                                change="{_userColor.building = new ColorEnum(buildingColor.selectedColor as Number)}"/>
      <mx:Text text="Success:"/><mx:ColorPicker id="successColor" selectedColor="{_userColor.success.code}"
                                               change="{_userColor.success = new ColorEnum(successColor.selectedColor as Number)}"/>
      <mx:Text text="Failure dark:"/><mx:ColorPicker id="failureColorDark" selectedColor="{_userColor.failureDark.code}"
                                               change="{_userColor.failureDark = new ColorEnum(failureColorDark.selectedColor as Number)}"/>
      <mx:Text text="Failure light:"/><mx:ColorPicker id="failureColorLight" selectedColor="{_userColor.failureLight.code}"
                                               change="{_userColor.failureLight = new ColorEnum(failureColorLight.selectedColor as Number)}"/>
    </mx:HBox>
    <mx:Text text="Reset to default Colors" mouseChildren="false" useHandCursor="true" buttonMode="true" textDecoration="underline"
                                            click="_userColor = preferences.resetToDefaultColors()"
                                            bottom="0" right="0"/>
  </mx:Canvas>
  <mx:ControlBar width="100%" horizontalAlign="right">
    <mx:Text id="cancel" text="Annuler" mouseChildren="false" useHandCursor="true" buttonMode="true" textDecoration="underline" click="close()"/>
    <mx:Button id="submit" label="Enregistrer" click="update();"/>
  </mx:ControlBar>
</mx:TitleWindow>
