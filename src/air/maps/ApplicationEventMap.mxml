<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright 2011 Vichheann Saing (vichheann at gmail dot com)

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<mate:EventMap xmlns:mate="http://mate.asfusion.com/" xmlns:mx="http://www.adobe.com/2006/mxml">
  <mx:Script>
    <![CDATA[
      import com._2h2n_.dashboard.cruiseControl.events.MessageEvent;
      import com._2h2n_.dashboard.cruiseControl.events.ResizeScreenEvent;
      import com._2h2n_.dashboard.cruiseControl.model.Preferences;

      import mx.events.FlexEvent;
      import mx.events.FlexNativeWindowBoundsEvent;

      private var _applicationCompleted:Boolean;

      public function setApplicationCompleted(value:Boolean):void
      {
        _applicationCompleted = value;
      }

      public function udpate(event:FlexNativeWindowBoundsEvent):void
      {
        //$$$ Can not catch ESC key pressed event, so check window size
        //mx.controls.Alert.show(event.beforeBounds.toString() + "\n" + event.afterBounds.toString());
        var resizeScreenEvent:ResizeScreenEvent = new ResizeScreenEvent();
        resizeScreenEvent.fullScreen = true;
        if (event.beforeBounds.width == event.afterBounds.width && event.beforeBounds.height == event.afterBounds.height)
        {
          resizeScreenEvent.fullScreen = false;
        }
        if (_applicationCompleted)
          getDispatcher().dispatchEvent(resizeScreenEvent);
      }
    ]]>
  </mx:Script>
  <mate:Debugger level="{Debugger.ALL}"/>
  <mate:EventHandlers type="{flash.events.InvokeEvent.INVOKE}" debug="true">
    <mate:DataCopier destination="{Preferences}" destinationKey="dashboardUrl" source="{event}" sourceKey="arguments" />
    <mate:EventAnnouncer type="{MessageEvent.LOAD_DATA}" generator="{MessageEvent}" />
  </mate:EventHandlers>
  <mate:EventHandlers type="{mx.events.FlexEvent.APPLICATION_COMPLETE}" debug="false">
    <mate:InlineInvoker method="{setApplicationCompleted}" arguments="{[true]}"/>
  </mate:EventHandlers>
  <mate:EventHandlers type="{mx.events.FlexNativeWindowBoundsEvent.WINDOW_RESIZE}" debug="true">
    <mate:InlineInvoker method="{udpate}" arguments="{[event]}"/>
  </mate:EventHandlers>
  <mate:EventHandlers type="{com._2h2n_.dashboard.cruiseControl.events.ResizeScreenEvent.RESIZED}" debug="true">
    <mate:DataCopier destination="{Preferences}" destinationKey="fullScreen" source="{event}" sourceKey="fullScreen"/>
  </mate:EventHandlers>
</mate:EventMap>

